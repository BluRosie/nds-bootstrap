name: Build nds-bootstrap

on:
  push:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    name: Build with Docker using devkitARM
    outputs:
      commit_tag: ${{ steps.vars.outputs.commit_tag }}
      commit_hash: ${{ steps.vars.outputs.commit_hash }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install p7zip-full gcc -y

          sudo gcc lzss.c -o /usr/local/bin/lzss
      - name: Setup environment
        run: git config --global safe.directory '*'
      - name: Build nightly
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        run: make package-nightly
      - name: Build release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: make package-release
      - name: Set variables
        id: vars
        run: |
          echo "commit_tag=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT
          echo "commit_hash=$(git log --format=%h -1)" >> $GITHUB_OUTPUT
      - name: Pack 7z nightly
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        run: |
          printf "${{ steps.vars.outputs.commit_hash }}\n" >> bin/nightly-bootstrap.ver
          mv bin/ nds-bootstrap/
          7z a nds-bootstrap.7z nds-bootstrap/

          mkdir -p ~/artifacts
          cp nds-bootstrap.7z ~/artifacts
      - name: Pack 7z release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          printf "Release ${{ steps.vars.outputs.commit_tag }}\n" >> bin/release-bootstrap.ver
          cd bin
          mkdir -p ~/artifacts

          7z a nds-bootstrap.7z .
          cp nds-bootstrap.7z ~/artifacts
          rm nds-bootstrap.7z

          7z a nds-bootstrap.zip .
          cp nds-bootstrap.zip ~/artifacts
      - name: Publish build to GH Actions
        uses: actions/upload-artifact@v3
        with:
          path: ~/artifacts/*
          name: build
